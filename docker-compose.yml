version: '3.8'

services:
  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.9.2
    ports:
      - "5001:5000" # accès externe via 5001
    volumes:
      - ./mlruns:/mlruns
      - ./models:/models
    networks:
      - app_network
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri sqlite:///mlruns.db
      --default-artifact-root /models
      --workers 1

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - app_network
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app_network

  frontend:
    build: ./frontend
    ports:
      - "8602:8501"
    environment:
      - API_URL=http://host.docker.internal:8002
    networks:
      - app_network

  training:
    build: ./training
    volumes:
      - ./training_data:/data
      - ./models:/models
    environment:
      - PYTHONUNBUFFERED=1
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - API_URL=http://host.docker.internal:8002
    networks:
      - app_network
    restart: unless-stopped
    command: >
      bash -c "
        echo '⏳ Attente de MLflow...';
        until curl -s http://host.docker.internal:8002/predict >/dev/null 2>&1; do
          echo 'API Jenkins non disponible, attente 2s...';
          sleep 2;
        done;
        until curl -s http://mlflow:5000/api/2.0/mlflow/experiments/list >/dev/null 2>&1; do
          echo 'MLflow non dispo, attente 2s...';
          sleep 2;
        done;
        echo '✅ MLflow est prêt, démarrage du training';
        python train.py --data /data/data.yaml --img 416 --batch 4 --mlflow-uri http://mlflow:5000
      "

networks:
  app_network:
    driver: bridge

volumes:
  grafana-data:
